name: Dev CI

on:
  push:
    branches: [ develop ]
  workflow_dispatch:        # optionally trigger manually

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout your code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configure Git for any scripts that perform git commit
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      # 3. Set up Node.js and point at GitHub Packages
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          always-auth: true

      # 4. Authenticate npm to GH Packages
      - name: Authenticate to GitHub Packages
        run: npm config set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}

      # 5. Install dependencies (may run version scripts etc.)
      - name: Install dependencies
        run: npm install

      # 6. If install fails, dump the npm debug log for diagnosis
      - name: üêõ Dump npm debug log
        if: failure()
        run: |
          echo "Contents of ~/.npm/_logs/:"
          ls -lah ~/.npm/_logs
          echo
          echo "---- DEBUG LOG ----"
          cat ~/.npm/_logs/*-debug-0.log

      # 7. Log in to GHCR for Docker push
      - name: Log in to GitHub Packages (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 8. Build & publish your Docker image
      - name: Build & publish Docker image to Dev package
        id: publish
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/simple-app-dev:latest

      # 9. Echo out the image digest & tags for easy verification
      - name: Show pushed image info
        run: |
          echo "üî• Image digest: ${{ steps.publish.outputs.digest }}"
          echo "üè∑Ô∏è  Tags: ${{ steps.publish.outputs.tags }}"
